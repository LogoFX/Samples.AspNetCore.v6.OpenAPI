//----------------------
// <auto-generated>
//     Generated using the NSwag toolchain v13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0)) (http://NSwag.org)
// </auto-generated>
//----------------------

#pragma warning disable 108 // Disable "CS0108 '{derivedDto}.ToJson()' hides inherited member '{dtoBase}.ToJson()'. Use the new keyword if hiding was intended."
#pragma warning disable 114 // Disable "CS0114 '{derivedDto}.RaisePropertyChanged(String)' hides inherited member 'dtoBase.RaisePropertyChanged(String)'. To make the current member override that implementation, add the override keyword. Otherwise add the new keyword."
#pragma warning disable 472 // Disable "CS0472 The result of the expression is always 'false' since a value of type 'Int32' is never equal to 'null' of type 'Int32?'
#pragma warning disable 1573 // Disable "CS1573 Parameter '...' has no matching param tag in the XML comment for ...
#pragma warning disable 1591 // Disable "CS1591 Missing XML comment for publicly visible type or member ..."
#pragma warning disable 8073 // Disable "CS8073 The result of the expression is always 'false' since a value of type 'T' is never equal to 'null' of type 'T?'"
#pragma warning disable 3016 // Disable "CS3016 Arrays as attribute arguments is not CLS-compliant"

namespace Samples.AspNetCore.v6.Facade.Controllers
{
    using System = global::System;

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public interface IWeatherForecastController
    {

        /// <summary>
        /// The Weather Forecast
        /// </summary>

        /// <returns>Success</returns>

        System.Threading.Tasks.Task<System.Collections.Generic.ICollection<WeatherForecast>> GetWeatherForecastAsync();


        /// <returns>Success</returns>

        System.Threading.Tasks.Task PostWeatherForecastAsync(WeatherForecast body);


        /// <returns>Success</returns>

        System.Threading.Tasks.Task DeleteWeatherForecastAsync(System.DateTimeOffset? body);


        /// <returns>Success</returns>

        System.Threading.Tasks.Task PutWeatherForecastAsync(WeatherForecast body);


        /// <returns>Success</returns>

        System.Threading.Tasks.Task<WeatherForecast> GetWeatherForecastByDateAsync(System.DateTimeOffset date);

    }

    [System.CodeDom.Compiler.GeneratedCode("NSwag", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    [Microsoft.AspNetCore.Mvc.Route("api/v1")]

    public partial class WeatherForecastController : Microsoft.AspNetCore.Mvc.ControllerBase
    {
        private IWeatherForecastController _implementation;

        public WeatherForecastController(IWeatherForecastController implementation)
        {
            _implementation = implementation;
        }

        /// <summary>
        /// The Weather Forecast
        /// </summary>
        /// <returns>Success</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("WeatherForecast", Name = "GetWeatherForecast")]
        public System.Threading.Tasks.Task<System.Collections.Generic.ICollection<WeatherForecast>> GetWeatherForecast()
        {

            return _implementation.GetWeatherForecastAsync();
        }

        /// <returns>Success</returns>
        [Microsoft.AspNetCore.Mvc.HttpPost, Microsoft.AspNetCore.Mvc.Route("WeatherForecast", Name = "PostWeatherForecast")]
        public System.Threading.Tasks.Task PostWeatherForecast([Microsoft.AspNetCore.Mvc.FromBody] WeatherForecast body)
        {

            return _implementation.PostWeatherForecastAsync(body);
        }

        /// <returns>Success</returns>
        [Microsoft.AspNetCore.Mvc.HttpDelete, Microsoft.AspNetCore.Mvc.Route("WeatherForecast", Name = "DeleteWeatherForecast")]
        public System.Threading.Tasks.Task DeleteWeatherForecast([Microsoft.AspNetCore.Mvc.FromBody] System.DateTimeOffset? body)
        {

            return _implementation.DeleteWeatherForecastAsync(body);
        }

        /// <returns>Success</returns>
        [Microsoft.AspNetCore.Mvc.HttpPut, Microsoft.AspNetCore.Mvc.Route("WeatherForecast", Name = "PutWeatherForecast")]
        public System.Threading.Tasks.Task PutWeatherForecast([Microsoft.AspNetCore.Mvc.FromBody] WeatherForecast body)
        {

            return _implementation.PutWeatherForecastAsync(body);
        }

        /// <returns>Success</returns>
        [Microsoft.AspNetCore.Mvc.HttpGet, Microsoft.AspNetCore.Mvc.Route("WeatherForecast/{date}", Name = "GetWeatherForecastByDate")]
        public System.Threading.Tasks.Task<WeatherForecast> GetWeatherForecastByDate([Microsoft.AspNetCore.Mvc.ModelBinding.BindRequired] System.DateTimeOffset date)
        {

            return _implementation.GetWeatherForecastByDateAsync(date);
        }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    public partial class WeatherForecast
    {
        [Newtonsoft.Json.JsonProperty("date", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        [Newtonsoft.Json.JsonConverter(typeof(DateFormatConverter))]
        public System.DateTimeOffset Date { get; set; }

        [Newtonsoft.Json.JsonProperty("temperatureC", Required = Newtonsoft.Json.Required.DisallowNull, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public int TemperatureC { get; set; }

        [Newtonsoft.Json.JsonProperty("summary", Required = Newtonsoft.Json.Required.Default, NullValueHandling = Newtonsoft.Json.NullValueHandling.Ignore)]
        public string Summary { get; set; }

    }

    [System.CodeDom.Compiler.GeneratedCode("NJsonSchema", "13.15.5.0 (NJsonSchema v10.6.6.0 (Newtonsoft.Json v13.0.0.0))")]
    internal class DateFormatConverter : Newtonsoft.Json.Converters.IsoDateTimeConverter
    {
        public DateFormatConverter()
        {
            DateTimeFormat = "yyyy-MM-dd";
        }
    }


}

#pragma warning restore 1591
#pragma warning restore 1573
#pragma warning restore  472
#pragma warning restore  114
#pragma warning restore  108
#pragma warning restore 3016