openapi: 3.1.0
info:
  title: Samples.AspNetCore.v6.Facade
  version: '1.0'
  description: The sample API definition
  contact:
    name: David Kossoglyad
    email: david@logoui.co.il
tags:
  - name: WeatherForecast
paths:
  /WeatherForecast:
    get:
      tags:
        - WeatherForecast
      operationId: GetWeatherForecast
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/WeatherForecast'
      summary: The Weather Forecast
      description: Represents the short weather update message
    post:
      description: Creates new forecast record
      tags:
        - WeatherForecast
      operationId: PostWeatherForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeatherForecast'
          text/json:
            schema:
              $ref: '#/components/schemas/WeatherForecast'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeatherForecast'
      responses:
        '200':
          description: Success
    delete:
      description: Deletes the forecast record
      tags:
        - WeatherForecast
      operationId: DeleteWeatherForecast
      requestBody:
        content:
          application/json:
            schema:
              type: string
              format: date-time
          text/json:
            schema:
              type: string
              format: date-time
          application/*+json:
            schema:
              type: string
              format: date-time
      responses:
        '200':
          description: Success
    put:
      description: Replaces the whole forecast message
      tags:
        - WeatherForecast
      operationId: PutWeatherForecast
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WeatherForecast'
          text/json:
            schema:
              $ref: '#/components/schemas/WeatherForecast'
          application/*+json:
            schema:
              $ref: '#/components/schemas/WeatherForecast'
      responses:
        '200':
          description: Success
  '/WeatherForecast/{date}':
    get:
      description: Searches for the forecast on a date
      tags:
        - WeatherForecast
      operationId: GetWeatherForecastByDate
      parameters:
        - name: date
          in: path
          required: true
          schema:
            type: string
            format: date-time
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/WeatherForecast'
            application/json:
              schema:
                $ref: '#/components/schemas/WeatherForecast'
            text/json:
              schema:
                $ref: '#/components/schemas/WeatherForecast'
components:
  schemas:
    WeatherForecast:
      type: object
      properties:
        date:
          type: string
          format: date-time
        temperatureC:
          type: integer
          format: int32
        temperatureF:
          type: integer
          format: int32
          readOnly: true
        summary:
          type: string
          nullable: true
      additionalProperties: false
servers:
  - url: 'http://127.0.0.1:3000'
    description: Local host
