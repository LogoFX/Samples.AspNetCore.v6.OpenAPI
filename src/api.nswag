{
  "runtime": "Net60",
  "defaultVariables": null,
  "documentGenerator": {
    "fromDocument": {
      "json": "{\r\n  \"openapi\": \"3.1.0\",\r\n  \"info\": {\r\n    \"title\": \"Samples.AspNetCore.v6.Facade\",\r\n    \"version\": \"1.0\",\r\n    \"description\": \"The sample API definition\",\r\n    \"contact\": {\r\n      \"name\": \"David Kossoglyad\",\r\n      \"email\": \"david@logoui.co.il\"\r\n    }\r\n  },\r\n  \"tags\": [\r\n    {\r\n      \"name\": \"WeatherForecast\",\r\n      \"description\": \"TBD\"\r\n    }\r\n  ],\r\n  \"paths\": {\r\n    \"/WeatherForecast\": {\r\n      \"get\": {\r\n        \"tags\": [\r\n          \"WeatherForecast\"\r\n        ],\r\n        \"operationId\": \"GetWeatherForecast\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n                  }\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n                  }\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"type\": \"array\",\r\n                  \"items\": {\r\n                    \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"summary\": \"The Weather Forecast\",\r\n        \"description\": \"Represents the short weather update message\"\r\n      },\r\n      \"post\": {\r\n        \"description\": \"Creates new forecast record\",\r\n        \"tags\": [\r\n          \"WeatherForecast\"\r\n        ],\r\n        \"operationId\": \"post\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n              }\r\n            }\r\n          },\r\n          \"description\": \"\"\r\n        },\r\n        \"responses\": {\r\n          \"201\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        }\r\n      },\r\n      \"put\": {\r\n        \"description\": \"Replaces the whole forecast message\",\r\n        \"tags\": [\r\n          \"WeatherForecast\"\r\n        ],\r\n        \"operationId\": \"PutWeatherForecast\",\r\n        \"requestBody\": {\r\n          \"content\": {\r\n            \"application/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n              }\r\n            },\r\n            \"text/json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n              }\r\n            },\r\n            \"application/*+json\": {\r\n              \"schema\": {\r\n                \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\"\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"/WeatherForecast/{date}\": {\r\n      \"get\": {\r\n        \"description\": \"Searches for the forecast on a date\",\r\n        \"tags\": [\r\n          \"WeatherForecast\"\r\n        ],\r\n        \"operationId\": \"GetWeatherForecastByDate\",\r\n        \"parameters\": [\r\n          {\r\n            \"name\": \"date\",\r\n            \"in\": \"path\",\r\n            \"required\": \"true\",\r\n            \"schema\": {\r\n              \"type\": \"string\",\r\n              \"format\": \"date\"\r\n            }\r\n          }\r\n        ],\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"Success\",\r\n            \"content\": {\r\n              \"text/plain\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n                }\r\n              },\r\n              \"application/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n                }\r\n              },\r\n              \"text/json\": {\r\n                \"schema\": {\r\n                  \"$ref\": \"#/components/schemas/WeatherForecast\"\r\n                }\r\n              }\r\n            }\r\n          }\r\n        },\r\n        \"summary\": \"Searches for the forecast on a date\"\r\n      },\r\n      \"delete\": {\r\n        \"tags\": [\r\n          \"WeatherForecast\"\r\n        ],\r\n        \"summary\": \"Delete the whole forecast message\",\r\n        \"operationId\": \"delete\",\r\n        \"responses\": {\r\n          \"200\": {\r\n            \"description\": \"OK\"\r\n          },\r\n          \"204\": {\r\n            \"description\": \"No Content\"\r\n          }\r\n        },\r\n        \"description\": \"Deletes the forecast.\"\r\n      },\r\n      \"parameters\": [\r\n        {\r\n          \"schema\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date\"\r\n          },\r\n          \"name\": \"date\",\r\n          \"in\": \"path\",\r\n          \"required\": \"true\"\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"components\": {\r\n    \"schemas\": {\r\n      \"WeatherForecast\": {\r\n        \"type\": \"object\",\r\n        \"additionalProperties\": \"false\",\r\n        \"properties\": {\r\n          \"date\": {\r\n            \"type\": \"string\",\r\n            \"format\": \"date\"\r\n          },\r\n          \"temperatureC\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\",\r\n            \"minimum\": \"-100\",\r\n            \"maximum\": \"100\"\r\n          },\r\n          \"temperatureF\": {\r\n            \"type\": \"integer\",\r\n            \"format\": \"int32\"\r\n          },\r\n          \"summary\": {\r\n            \"type\": \"string\",\r\n            \"nullable\": \"true\",\r\n            \"maxLength\": \"256\"\r\n          }\r\n        },\r\n        \"required\": [\r\n          \"date\",\r\n          \"temperatureC\"\r\n        ]\r\n      }\r\n    }\r\n  },\r\n  \"servers\": [\r\n    {\r\n      \"url\": \"http://127.0.0.1:3000\",\r\n      \"description\": \"Local host\"\r\n    }\r\n  ]\r\n}",
      "url": "api.yaml",
      "output": null,
      "newLineBehavior": "Auto"
    }
  },
  "codeGenerators": {
    "openApiToTypeScriptClient": {
      "className": "{controller}Client",
      "moduleName": "",
      "namespace": "",
      "typeScriptVersion": 2.7,
      "template": "Fetch",
      "promiseType": "Promise",
      "httpClass": "HttpClient",
      "withCredentials": false,
      "useSingletonProvider": false,
      "injectionTokenType": "OpaqueToken",
      "rxJsVersion": 6.0,
      "dateTimeType": "Date",
      "nullValue": "Undefined",
      "generateClientClasses": true,
      "generateClientInterfaces": false,
      "generateOptionalParameters": false,
      "exportTypes": true,
      "wrapDtoExceptions": false,
      "exceptionClass": "ApiException",
      "clientBaseClass": null,
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "protectedMethods": [],
      "configurationClass": null,
      "useTransformOptionsMethod": false,
      "useTransformResultMethod": false,
      "generateDtoTypes": true,
      "operationGenerationMode": "MultipleClientsFromFirstTagAndOperationId",
      "markOptionalProperties": true,
      "generateCloneMethod": false,
      "typeStyle": "Class",
      "enumStyle": "Enum",
      "useLeafType": false,
      "classTypes": [],
      "extendedClasses": [],
      "extensionCode": null,
      "generateDefaultValues": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [],
      "handleReferences": false,
      "generateConstructorInterface": true,
      "convertConstructorInterfaceData": false,
      "importRequiredTypes": true,
      "useGetBaseUrlMethod": false,
      "baseUrlTokenName": "API_BASE_URL",
      "queryNullValue": "",
      "useAbortSignal": false,
      "inlineNamedDictionaries": false,
      "inlineNamedAny": false,
      "includeHttpContext": false,
      "templateDirectory": null,
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "../client/src/generated/api.ts",
      "newLineBehavior": "Auto"
    },
    "openApiToCSharpController": {
      "controllerBaseClass": null,
      "controllerStyle": "Partial",
      "controllerTarget": "AspNetCore",
      "useCancellationToken": true,
      "useActionResultType": true,
      "generateModelValidationAttributes": true,
      "routeNamingStrategy": "OperationId",
      "basePath": "api/v1",
      "className": "{controller}",
      "operationGenerationMode": "MultipleClientsFromFirstTagAndOperationId",
      "additionalNamespaceUsages": [],
      "additionalContractNamespaceUsages": [],
      "generateOptionalParameters": false,
      "generateJsonMethods": false,
      "enforceFlagEnums": false,
      "parameterArrayType": "System.Collections.Generic.IEnumerable",
      "parameterDictionaryType": "System.Collections.Generic.IDictionary",
      "responseArrayType": "System.Collections.Generic.ICollection",
      "responseDictionaryType": "System.Collections.Generic.IDictionary",
      "wrapResponses": false,
      "wrapResponseMethods": [],
      "generateResponseClasses": true,
      "responseClass": "SwaggerResponse",
      "namespace": "Samples.AspNetCore.v6.Facade.Controllers",
      "requiredPropertiesMustBeDefined": true,
      "dateType": "System.DateTimeOffset",
      "jsonConverters": null,
      "anyType": "object",
      "dateTimeType": "System.DateTimeOffset",
      "timeType": "System.TimeSpan",
      "timeSpanType": "System.TimeSpan",
      "arrayType": "System.Collections.Generic.List",
      "arrayInstanceType": "System.Collections.Generic.List",
      "dictionaryType": "System.Collections.Generic.IDictionary",
      "dictionaryInstanceType": "System.Collections.Generic.Dictionary",
      "arrayBaseType": "System.Collections.ObjectModel.Collection",
      "dictionaryBaseType": "System.Collections.Generic.Dictionary",
      "classStyle": "Poco",
      "jsonLibrary": "NewtonsoftJson",
      "generateDefaultValues": true,
      "generateDataAnnotations": true,
      "excludedTypeNames": [],
      "excludedParameterNames": [
        "Samples.AspNetCore.v6.Facade.Controllers"
      ],
      "handleReferences": true,
      "generateImmutableArrayProperties": false,
      "generateImmutableDictionaryProperties": false,
      "jsonSerializerSettingsTransformationMethod": null,
      "inlineNamedArrays": false,
      "inlineNamedDictionaries": false,
      "inlineNamedTuples": true,
      "inlineNamedAny": false,
      "generateDtoTypes": true,
      "generateOptionalPropertiesAsNullable": false,
      "generateNullableReferenceTypes": false,
      "templateDirectory": "Templates",
      "typeNameGeneratorType": null,
      "propertyNameGeneratorType": null,
      "enumNameGeneratorType": null,
      "serviceHost": null,
      "serviceSchemes": null,
      "output": "Samples.AspNetCore.v6.Facade/Controllers/api.cs",
      "newLineBehavior": "Auto"
    }
  }
}